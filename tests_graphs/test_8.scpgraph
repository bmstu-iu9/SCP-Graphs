(Node (Finished)(0 )()(let (assign (par e 10 )())(assign (par e 11 )((par e InitialString )))in ((par e 10 )(call G(arg (call F(arg (par e 11 )))))))(Children (Node (Finished)(0 0 )()(()((par e 10 )(call G(arg (call F(arg (par e 11 )))))))(Children (Node (Finished)(0 0 0 )((assign (par e 11 )()))(()((par e 10 ))))(Node (Finished)(0 0 1 )((assign (par e 11 )(A(par e 12 ))))(let (assign (par e 23 )((par e 10 )C))(assign (par e 24 )((par e 12 )))in ((par e 23 )(call G(arg (call F(arg (par e 24 )))))))(Children (Node (Looped )(0 0 1 0 )()(Looped to (0 0 )((assign (par e 10 )((par e 23 )))(assign (par e 11 )((par e 24 ))))))(Node (Finished)(0 0 1 1 )()(()((par e 10 )C)))(Node (Finished)(0 0 1 2 )()(()((par e 12 ))))))(Node (Finished)(0 0 2 )((assign (par e 11 )(B(par e 13 ))))(let (assign (par e 39 )((par e 10 )C))(assign (par e 40 )((par e 13 )))in ((par e 39 )(call G(arg (call F(arg (par e 40 )))))))(Children (Node (Looped )(0 0 2 0 )()(Looped to (0 0 )((assign (par e 10 )((par e 39 )))(assign (par e 11 )((par e 40 ))))))(Node (Finished)(0 0 2 1 )()(()((par e 10 )C)))(Node (Finished)(0 0 2 2 )()(()((par e 13 ))))))(Node (Finished)(0 0 3 )((assign (par e 11 )(C(par e 14 ))))(let (assign (par e 55 )((par e 10 )C))(assign (par e 56 )((par e 14 )))in ((par e 55 )(call G(arg (call F(arg (par e 56 )))))))(Children (Node (Looped )(0 0 3 0 )()(Looped to (0 0 )((assign (par e 10 )((par e 55 )))(assign (par e 11 )((par e 56 ))))))(Node (Finished)(0 0 3 1 )()(()((par e 10 )C)))(Node (Finished)(0 0 3 2 )()(()((par e 14 ))))))))(Node (Finished)(0 1 )()(()()))(Node (Finished)(0 2 )()(()((par e InitialString ))))))
